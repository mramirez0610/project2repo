{"version":3,"sources":["components/dataComp/albumView.js","components/listComp/trackListing.js","components/dataComp/descView.js","components/headerComp/albumBanner.js","components/backgroundAnimation/backgroundView.js","components/playerComp/musicPlayer.js","components/mainComp/musicView.js","App.js","reportWebVitals.js","index.js"],"names":["AlbumView","props","AlbumList","albums","map","album","className","onClick","onSelect","id","width","height","src","cover","TrackListing","trackList","selectedAl","theme","createTheme","typography","fontFamily","fontSize","ThemeProvider","Box","sx","maxWidth","bgcolor","boxShadow","itemSize","itemCount","length","overscanCount","index","style","ListItem","component","disablePadding","ListItemButton","songId","songSelected","ListItemText","primary","songTitle","secondary","songLength","DescriptionView","description","HeaderView","useState","inProp","CSSTransition","in","timeout","test","aTitle","runTime","totalTracks","BackgroundView","fullType","u","f","JSON","stringify","s","push","options","delay","deleteSpeed","strings","autoStart","loop","wrapperClassName","MusicPlayer","aRef","useRef","currentSong","selectedSong","url","NeatTrick","controls","ref","MusicView","error","setError","isLoaded","setIsLoaded","setAlbums","setSelectedSong","setSelectedAl","selectedTracklist","useEffect","fetch","then","res","json","data","foundAlbum","find","albumSelected","foundSong","tracklist","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bb6e073.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./view.css\"\r\n\r\nexport default function AlbumView(props){\r\n    /* \r\n    little bit of an issue here -- the area of the photos click region is kinda funky.\r\n    either look into <map> or <area>. these seem like they could help\r\n    */\r\n    const AlbumList = props.albums.map((album) => (\r\n        <div\r\n            className = \"previewImg\"\r\n            key={album.id}\r\n            onClick={() =>{\r\n                props.onSelect(album.id)\r\n            }}\r\n        >\r\n            <img width=\"100\" height=\"100\" src={album.cover}/>\r\n        </div>\r\n    ));\r\n    \r\n    return <div>{AlbumList}</div>\r\n}","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nexport default function TrackListing(props){\r\n  const trackList = props.selectedAl.trackList;\r\n\r\n  const theme = createTheme({\r\n    typography: {\r\n      fontFamily: 'Source Code Pro',\r\n      fontSize: 12 \r\n    }\r\n  })\r\n\r\n  /*\r\n  this whole situation was a doozy -- i set this up as a row that can be repeated through\r\n  the fixedSizedList component. though when it came to the music player, this also was a\r\n  great help, by using index i was able to number each of these buttons\r\n\r\n  */\r\n  const Row = ({index , style}) => (\r\n    <ListItem \r\n      style={style}\r\n      key={index} \r\n      component=\"div\" \r\n      disablePadding\r\n    >\r\n      <ListItemButton\r\n        id={trackList[index].songId} \r\n        onClick={() => {\r\n          props.songSelected(trackList[index].songId)\r\n        }}\r\n      >\r\n        <ListItemText\r\n          key={trackList[index].songId}\r\n          primary={`${trackList[index].songTitle}`} \r\n          secondary={`${trackList[index].songLength}`}\r\n        />\r\n      </ListItemButton>\r\n    </ListItem>\r\n  );\r\n \r\n  return (\r\n  <div>\r\n    <b><u><p>tracklist :</p></u></b>\r\n    <ThemeProvider theme={theme}>\r\n      <Box\r\n        sx={{\r\n          height: 400, \r\n          maxWidth: 350, \r\n          bgcolor: '#dedede',\r\n          \":hover\" : {\r\n            boxShadow: 2, \r\n          }\r\n        }}\r\n      >\r\n      <FixedSizeList\r\n        className=\"list\" \r\n        height={400}\r\n        width={350}\r\n        itemSize={65}\r\n        itemCount={trackList.length}\r\n        overscanCount={7}\r\n      >\r\n        {Row}\r\n      </FixedSizeList>\r\n      </Box>\r\n    </ThemeProvider>\r\n  </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function DescriptionView(props){\r\n    \r\n    return (\r\n    <div className=\"descBox\">\r\n        <p>{props.selectedAl.description}</p>\r\n    </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./albumAnimation.css\"\r\n\r\nexport default function HeaderView(props){\r\n    const [inProp, setInProp] = useState(false);\r\n    /*\r\n    i tried animating the preview image of the album, but setting in prop in this\r\n    function breaks everything. also, for some reason, onClick by itself \r\n    \"onClick={() => setInProp(true)} doesn't work whatsoever. kinda funny\r\n    */\r\n    const test = () => {\r\n        //console.log(\"weweawewwe\");\r\n        //setInProp(!inProp);\r\n    }\r\n    //console.log(inProp);\r\n\r\n    return (\r\n    <div className=\"bannerArea\">\r\n        <CSSTransition in={inProp} timeout={6000} className=\"selectedAl\">\r\n            <img \r\n                onClick={test()}\r\n                className=\"selectedAl\" \r\n                height=\"200\" \r\n                width=\"200\" \r\n                src={props.selectedAl.cover} \r\n            />\r\n        </CSSTransition>\r\n\r\n        <div className=\"generalInfo\">\r\n            <h1>{props.selectedAl.aTitle}</h1>\r\n            <p><b>total runtime</b> - {props.selectedAl.runTime}</p>\r\n            <p><b>amount of tracks</b> - {props.selectedAl.totalTracks}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport \"./background.css\";\r\n\r\nexport default function BackgroundView(props){\r\n    const fullType = [];\r\n\r\n    for(let u = 0; u < props.albums.length; u++){\r\n        const f = JSON.stringify(props.albums[u].trackList);\r\n        const s = JSON.stringify(props.albums[u].trackList);\r\n        fullType.push(f, s);\r\n    }\r\n\r\n    return (\r\n    <div className=\"console\">\r\n        <Typewriter \r\n            options={{\r\n                delay: .2,\r\n                deleteSpeed: 2,\r\n                strings: `${fullType}`,\r\n                autoStart: true,\r\n                loop: true,\r\n                wrapperClassName: \"wrapper\",\r\n            }}\r\n        />\r\n    </div>\r\n    )\r\n}","import React, { useRef } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport \"./audio.css\";\r\n\r\nexport default function MusicPlayer(props){\r\n    const aRef = useRef();\r\n    const currentSong = props.selectedSong.url\r\n    const songTitle = props.selectedSong.songTitle\r\n    const curAlbum = props.selectedAl.aTitle\r\n\r\n    /* \r\n    genuinely don't understand how i got this working but i did woooo!!!! i did every\r\n    piece of this animation myself since there's not much documentation over \r\n    typewriter-effect -- nonetheless man im happy\r\n\r\n    the console says that \"euuugh comparing a value to itself is pointless euugh\" \r\n    but literally bro if the songTitle === songTitle wasn't there this whole thing\r\n    wouldn't re-render eat shit console\r\n    */\r\n\r\n    const NeatTrick = () => {if(songTitle === songTitle) return(\r\n        <Typewriter\r\n            options={{\r\n                delay: 1, \r\n                strings: `${songTitle}`, \r\n                autoStart:true\r\n            }}\r\n        />\r\n    )};\r\n\r\n    return (\r\n        <div className=\"audioArea\">\r\n            <audio\r\n                controls\r\n                ref={aRef}\r\n                src={currentSong}\r\n                className=\"audioPlayer\"\r\n            ></audio>\r\n            <div>\r\n                <p><b>now playing:</b></p>\r\n                <NeatTrick/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport AlbumView from \"../dataComp/albumView\";\r\nimport TrackListing from \"../listComp/trackListing\"\r\nimport DescriptionView from \"../dataComp/descView\";\r\nimport HeaderView from \"../headerComp/albumBanner\";\r\nimport BackgroundView from \"../backgroundAnimation/backgroundView\";\r\nimport MusicPlayer from \"../playerComp/musicPlayer\";\r\nimport \"./style.css\"\r\nimport \"./weird.css\"\r\n\r\n// jumps up so high that i comicallay crash my head through the ceiling\r\nexport default function MusicView() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [albums, setAlbums] = useState([]);  \r\n  const [selectedSong, setSelectedSong] = useState({});\r\n  const [selectedAl, setSelectedAl] = useState([]);\r\n  const selectedTracklist = selectedAl.trackList;\r\n\r\n  useEffect(() => {\r\n    fetch(\"data/listOfAlbums.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //assigns our data from json into an actual variable\r\n        setAlbums(data);  \r\n        setSelectedAl(data[0]);\r\n        setIsLoaded(true);\r\n      },\r\n      (error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n      );\r\n  }, []);\r\n\r\n  if(error) {\r\n    return <div className=\"main\">error</div>\r\n  } \r\n  else if(!isLoaded) {\r\n    return <div className=\"main\"></div>\r\n  } else {\r\n    return (\r\n      <div>\r\n        <BackgroundView \r\n          selectedAl = {selectedAl}\r\n          albums = {albums}\r\n        />\r\n      <div className=\"wee\">\r\n        \r\n\r\n        <div className=\"albumChoice area\">\r\n          <b><u><p>album choice:</p></u></b>\r\n          <AlbumView \r\n            albums={albums}\r\n            onSelect={(id) => {\r\n              albumSelected(id);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"main\">  \r\n          <div className = \"actualHeader\">\r\n            <HeaderView \r\n              selectedAl = {selectedAl}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"musicCol\">\r\n            <TrackListing\r\n              isLoaded = {isLoaded}\r\n              selectedAl = {selectedAl}\r\n              songSelected = {songSelected}\r\n            /> \r\n            <DescriptionView \r\n              selectedAl = {selectedAl}\r\n            />\r\n          </div>\r\n\r\n          <MusicPlayer\r\n            selectedAl = {selectedAl}\r\n            selectedSong = {selectedSong}\r\n          />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function albumSelected(id){\r\n    const foundAlbum = albums.find((album) => album.id === id);\r\n    setSelectedAl(foundAlbum);\r\n  }\r\n\r\n  function songSelected(id){\r\n    const foundSong = selectedTracklist.find((tracklist) => tracklist.songId === id);\r\n    setSelectedSong(foundSong);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport MusicView from \"./components/mainComp/musicView\";\r\n\r\nexport default function App() {\r\n  return (  \r\n    <div>\r\n      <MusicView />\r\n      {/* \r\n      \r\n      questions to ask:\r\n\r\n      -are mui core / material the same?\r\n      \r\n      -it for some reason is one click behind when it reads data.\r\n\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}